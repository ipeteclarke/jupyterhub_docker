## Version 2023/05/31
# make sure that your portainer container is named portainer
# make sure that your dns has a cname set for portainer

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name jupyterhub.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    # enable for ldap auth (requires ldap-location.conf in the location block)
    #include /config/nginx/ldap-server.conf;

    # enable for Authelia (requires authelia-location.conf in the location block)
    #include /config/nginx/authelia-server.conf;

    # enable for Authentik (requires authentik-location.conf in the location block)
    #include /config/nginx/authentik-server.conf;

    location / {
        # enable the next two lines for http auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # enable for ldap auth (requires ldap-server.conf in the server block)
        #include /config/nginx/ldap-location.conf;

        # enable for Authelia (requires authelia-server.conf in the server block)
        #include /config/nginx/authelia-location.conf;

        # enable for Authentik (requires authentik-server.conf in the server block)
        #include /config/nginx/authentik-location.conf;

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app jupyterhub;
        set $upstream_port 8000;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;        

    }

    location ~* /(api/kernels/[^/]+/channels|terminals/websocket)/? {
        
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app jupyterhub;
        set $upstream_port 8000;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
        
        
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header Host $host;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-NginX-Proxy true;

        # I think swag has this already in place
        # WebSocket support
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "upgrade";

        # proxy_buffering off;
        # proxy_socket_keepalive on;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        # proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        # proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

        }

}
